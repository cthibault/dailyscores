@model IEnumerable<DailyScores.Models.JumbleScore>

<table>
    <tr>
        <th>Id</th>
        <th>Player</th>
        <th>Date</th>
        <th>Total</th>
        <th>Word 1</th>
        <th>Word 2</th>
        <th>Word 3</th>
        <th>Word 4</th>
        <th>Word 5</th>
        <th>Time</th>
    </tr>
    @foreach (var dateGroup in Model.GroupBy(s => s.Date))
    {
        <tbody class="row-grouping">
            @foreach (var score in dateGroup.OrderByDescending(s => s.TotalScore).ThenBy(s => s.TimeInSeconds))
            {
                string style = score.Date == DateTime.Today ? "today" : string.Empty;
                <tr class="@style">
                    <td>@Html.DisplayFor(x => score.JumbleId)</td>
                    <td>@Html.ActionLink(score.Player.Name, "Details", "Players", new { id = score.PlayerId }, null)</td>
                    <td>@Html.DisplayFor(x => score.DisplayDate)</td>
                    <td>@Html.DisplayFor(x => score.TotalScore)</td>
                    <td>@Html.DisplayFor(x => score.WordOneMultiplier)</td>
                    <td>@Html.DisplayFor(x => score.WordTwoMultiplier)</td>
                    <td>@Html.DisplayFor(x => score.WordThreeMultiplier)</td>
                    <td>@Html.DisplayFor(x => score.WordFourMultiplier)</td>
                    <td>@Html.DisplayFor(x => score.WordFiveMultiplier)</td>
                    <td>@Html.DisplayFor(x => score.DisplayTime)</td>
                </tr>
            }
        </tbody>
        }
</table>
