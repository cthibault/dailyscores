@model IEnumerable<DailyScores.Models.HidatoScore>

<h2>Recent Hidato Scores:</h2>
<table>
    <tr>
        <th>Id</th>
        <th>Player</th>
        <th>Date</th>
        <th>Total</th>
        <th>Tile Score</th>
        <th>Perfect Bonus</th>
        <th>Time Bonus</th>
        <th>Multiplier</th>
        <th>Time</th>
    </tr>
    @foreach (var dateGroup in Model.GroupBy(s => s.Date))
    {
        <tbody class="row-grouping">
            @foreach (var score in dateGroup.OrderByDescending(s => s.TotalScore).ThenBy(s => s.TimeInSeconds))
            {
                string style = score.Date == DateTime.Today ? "today" : string.Empty;
                <tr class="@style">
                    <td>@Html.DisplayFor(x => score.HidatoId)</td>
                    <td>@Html.ActionLink(score.Player.Name, "Details", "Players", new { id = score.PlayerId }, null)</td>
                    <td>@Html.DisplayFor(x => score.DisplayDate)</td>
                    <td>@Html.DisplayFor(x => score.TotalScore)</td>
                    <td>@Html.DisplayFor(x => score.TileScore)</td>
                    <td>@Html.DisplayFor(x => score.PerfectBonus)</td>
                    <td>@Html.DisplayFor(x => score.TimeBonus)</td>
                    <td>@Html.DisplayFor(x => score.Multiplier)</td>
                    <td>@Html.DisplayFor(x => score.DisplayTime)</td>
                </tr>
                }
        </tbody>
    }
</table>
